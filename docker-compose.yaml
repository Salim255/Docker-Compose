version: "3.8"
services:
  mongodb:
    image: "mongo"
    volumes:
      - data:/data/db
    #environment:
       #MONGO_INITDB_ROOT_USERNAME: max
       #MONGO_INITDB_ROOT_PASSWORD: secret
      #or
      #- MONGO_INITDB_ROOT_USERNAME=max
    #or
    env_file:
        - ./env/mongo.env
  backend:
    build: ./backend
    #docker compose will look in the folder backend to get the Dockerfile the run it to build our image, then the image will be used in the actual container 
    #OR
    #build: 
    # context: ./backend
    # dockerfile: DockerfilName
    # args:
    #     some-args
    ports:
      - "8080:8080"
    volumes:
      - logs:/app/logs
      - ./backend:/app
      - /app/node_modules 
    env_file:
      - ./env/backend.env
    depends_on:
      - mongodb

  frontend:
    build: ./frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend/src:/app/src
    #bind my fronend src folder to the app/src iside the container 
    stdin_open: true
    tty: true
    #this let the docker know that this service need input connection, so stdin_open for open stander input, and tty for attaching this terminal, so with theses two options frontend service will start in intractive mode
    depends_on:
      - backend
    #to tell that this service should run after the backend service .


##Name volume, only for named volume
volumes:
  data:
  logs: